extend type Query {
#    test: String
    test(countriesInput: CountriesInput): Countries
#    test1(conditions: CountriesCondition): String
#    findCountriesById(id: ID!): Countries
#    queryCountries(inputCountries: InputCountries): [Countries]
#    findAllCountries(first: Int, after: String, last: Int, before: String): CountriesConnection
}
#
#input PageQuery {
#    first: Int = 10
#    after: String = ""
#    last: Int = 10
#    before: String = ""
#}
#
#type Mutation {
#    saveCountries(inputCountries: InputCountries): Countries
#}

#type Mutation {
#    save(in: [InputCountries]): Countries
#}
#
#input InputCountries {
#    id: ID
#    name: String
#    age: Int
#    birthday: Date
#}
#
#input Users2 {
#    id: ID
#    name: String
#}
#
#type Countries {
#    id: ID
#    name: String
#    age: Int
#    birthday: Date
#    address: Address
#}
#
#type Address {
#    code: Int
#    address: String
#}